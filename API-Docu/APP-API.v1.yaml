openapi: 3.0.0
info:
  title: APP-API
  version: '1.0'
  contact:
    email: bylukee1@gmail.com
    name: Lukas KÃ¶nig
  description: API for communication between the MRAS WebApp/App and the Server
servers:
  - url: 'http://localhost:3000/api/v1'
paths:
  /user/register:
    parameters: []
    post:
      summary: Register User
      operationId: register
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
                required:
                  - token
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - error
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - error
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                  description: sha-256 hashed password
              required:
                - username
                - password
      security: []
  /user/login:
    post:
      summary: Login User
      operationId: login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                  description: sha-256 hashed password
              required:
                - username
                - password
      security: []
    parameters: []
  '/user/{id}/permissions/':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: Update User Privileges
      operationId: updateUserPermissions
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userid:
                  type: string
                privileges:
                  $ref: '#/components/schemas/UserPrivileges'
              required:
                - userid
                - privileges
      description: Updates user permissions
  /user:
    get:
      summary: Get All Users
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
              examples: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      operationId: getAllUsers
    parameters: []
  /room:
    parameters: []
    post:
      summary: Create a new Room
      operationId: createRoom
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/User'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                desciption:
                  type: string
                dimensions:
                  type: object
                  properties:
                    hieght:
                      type: number
                    width:
                      type: number
            examples:
              example-1:
                value: {}
    get:
      summary: Get all Rooms
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                  rooms:
                    type: array
                    items:
                      $ref: '#/components/schemas/Room'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      operationId: getAllRooms
  '/room/{id}':
    get:
      summary: Get Specific Room by ID
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  room:
                    $ref: '#/components/schemas/Room'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      operationId: getRoom
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/user/{id}':
    get:
      summary: Get specific User by ID
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
      operationId: getUser
      description: Get Users by ID
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    delete:
      summary: Delete User
      operationId: deleteUser
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      description: |-
        Deletes User from Database.
        The User sending the requests needs to be an administrator
  /speaker:
    parameters: []
    post:
      summary: Add new Speaker
      operationId: addSpeaker
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  speaker:
                    $ref: '#/components/schemas/Speaker'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                speaker:
                  $ref: '#/components/schemas/Speaker'
      description: 'Add a new Speaker '
    get:
      summary: Get All Speaker
      operationId: getAllSpeaker
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                  speakers:
                    type: array
                    items:
                      $ref: '#/components/schemas/Speaker'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      description: Get All Speakers
  /user/logout:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      operationId: logoutUser
      description: logs out user an makes Token invalid
    parameters: []
  '/speaker/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Speaker by ID
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  speaker:
                    $ref: '#/components/schemas/Speaker'
      operationId: getSpeaker
      description: Get Speaker by ID
    delete:
      summary: Remove Speaker
      operationId: removeSpeaker
      responses:
        '200':
          description: OK
      description: ''
components:
  schemas:
    Room:
      title: Room
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        dimensions:
          type: object
          description: not used yet
          properties:
            height:
              type: number
            width:
              type: number
    Speaker:
      title: Speaker
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        position:
          type: object
          description: not used yet
          properties:
            x:
              type: number
            'y':
              type: number
        roomid:
          type: string
    User:
      title: User
      type: object
      properties:
        id:
          type: string
        username:
          type: string
    Error:
      title: Error
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    UserPrivileges:
      title: UserPermissions
      type: object
      properties:
        admin:
          type: boolean
        canedit:
          type: boolean
        speakers:
          type: array
          description: speaker id
          items:
            type: string
        rooms:
          type: array
          description: room id
          items:
            type: string
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      description: ''
security:
  - Bearer: []
